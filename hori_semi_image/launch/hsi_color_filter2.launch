<!-- -*- mode: xml -*- -->
<launch>
  <!--
  $ roslaunch openni_launch openni.launch    ;; start kinect camera
  $ rosrun rqt_reconfigure rqt_reconfigure   ;; parameter settings
  $ roslaunch jsk_pcl_ros hsi_color_filter.launch DEFAULT_NAMESPACE:=/camera/depth_registered INPUT:=points
  ;; subscribe camera/depth_registered/hsi_output
  ;; subscribe tf and find /target
  -->
  <arg name="INPUT" default="points"/>
  <arg name="OUTPUT" default="hsi_output2"/>
  <arg name="CENTROID_FRAME" default="target"/>
  <arg name="DEFAULT_NAMESPACE" default="/camera_remote/depth_registered"/>

  <arg name="h_max" default="127" />
  <arg name="h_min" default="123" />
  <arg name="s_max" default="212" />
  <arg name="s_min" default="46" />
  <arg name="i_max" default="203" />
  <arg name="i_min" default="49" />

  <arg name="create_manager" default="true" />
  <arg name="manager" default="hsi_filter_manager2" />

  <group ns="$(arg DEFAULT_NAMESPACE)">
    <node if="$(arg create_manager)"
          pkg="nodelet" type="nodelet" name="$(arg manager)"
          args="manager" output="screen"/>

    <node pkg="nodelet" type="nodelet" name="hsi_filter2"
          args="load jsk_pcl/HSIColorFilter $(arg manager)" output="screen">
      <remap from="~input" to="$(arg INPUT)" />
      <remap from="~output" to="$(arg OUTPUT)" />
      <rosparam>
        use_indices: false
      </rosparam>
      <param name="h_limit_max" value="$(arg h_max)" />
      <param name="h_limit_min" value="$(arg h_min)" />
      <param name="s_limit_max" value="$(arg s_max)" />
      <param name="s_limit_min" value="$(arg s_min)" />
      <param name="i_limit_max" value="$(arg i_max)" />
      <param name="i_limit_min" value="$(arg i_min)" />
    </node>
    <node pkg="nodelet" type="nodelet" name="euclidean_clustering2"
          args="load jsk_pcl/EuclideanClustering $(arg manager)" output="screen">
      <remap from="~input" to="$(arg OUTPUT)" />
      <rosparam>
        tolerance: 0.02
        min_size: 100
      </rosparam>
    </node>

    <node pkg="nodelet" type="nodelet"
          name="cluster_decomposer2"
          args="load jsk_pcl/ClusterPointIndicesDecomposerZAxis $(arg manager)"
          output="screen" clear_params="true">
      <remap from="~input" to="$(arg OUTPUT)" />
      <remap from="~target" to="euclidean_clustering/output" />
      <rosparam>
      </rosparam>
    </node>


  </group>

</launch>
