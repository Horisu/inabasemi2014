#!/usr/bin/env roseus

(load "package://hrpsys_ros_bridge_tutorials/euslisp/hrp2w-interface.l")
(hrp2w-init)
(objects *hrp2w*)
(ros::roseus "controller")
(setq *vel_msg* (instance geometry_msgs::Twist :init))
(defun cmd_vel (x y theta)
  (send *vel_msg* :linear :x x)
  (send *vel_msg* :linear :y y)
  (send *vel_msg* :angular :z theta)
  (ros::publish "/cmd_vel" *vel_msg*)
  )
(defun triangle-func ()
  (send *hrp2w* :head :look-at (send *hrp2w* :rarm :end-coords :pos))
  (send *irtviewer* :draw-objects)
  (send *ri* :angle-vector (send *hrp2w* :angle-vector) 5000)
  (send *ri* :wait-interpolation)
)
(defun circle-func ()
  (send *hrp2w* :reset-manip-pose)
  (send *irtviewer* :draw-objects)
  (send *ri* :angle-vector (send *hrp2w* :angle-vector) 5000)
  (send *ri* :wait-interpolation)
)
(defun cross-func ()
  (send *hrp2w* :reset-pose)
  (send *irtviewer* :draw-objects)
  (send *ri* :angle-vector (send *hrp2w* :angle-vector) 5000)
  (send *ri* :wait-interpolation)
)
(defun square-func ()
  (send *hrp2w* :larm :shoulder-p :joint-angle -90)
  (send *hrp2w* :rarm :shoulder-p :joint-angle -90)
  (send *hrp2w* :larm :shoulder-y :joint-angle   0)
  (send *hrp2w* :rarm :shoulder-y :joint-angle   0)
  (send *hrp2w* :larm :shoulder-r :joint-angle  45)
  (send *hrp2w* :rarm :shoulder-r :joint-angle -45)
  (send *hrp2w* :larm :elbow-p    :joint-angle   0)
  (send *hrp2w* :rarm :elbow-p    :joint-angle   0)
  (send *hrp2w* :larm :wrist-p    :joint-angle   0)
  (send *hrp2w* :rarm :wrist-p    :joint-angle   0)
  (send *hrp2w* :larm :wrist-y    :joint-angle   0)
  (send *hrp2w* :rarm :wrist-y    :joint-angle   0)
  (send *hrp2w* :larm :wrist-r    :joint-angle   0)
  (send *hrp2w* :rarm :wrist-r    :joint-angle   0)
  (send *irtviewer* :draw-objects)
  (send *ri* :angle-vector (send *hrp2w* :angle-vector) 5000)
  (send *ri* :wait-interpolation)
)
(defun joy-callback (msg)
  (if (= 1 (elt (send msg :buttons) 10))
      (cmd_vel (* 0.1 (elt (send msg :axes) 1)) (* 0.1 (elt (send msg :axes) 0)) (* 0.1 (elt (send msg :axes) 2)))
    (cmd_vel 0 0 0))
  (if (= 1 (elt (send msg :buttons) 11))
      (progn
	(if (= 1 (elt (send msg :buttons) 12)) ;;triangle
	    (triangle-func))
	(if (= 1 (elt (send msg :buttons) 13)) ;;circle
	    (circle-func))
	(if (= 1 (elt (send msg :buttons) 14)) ;;cross
	    (cross-func))
	(if (= 1 (elt (send msg :buttons) 15)) ;;square
	    (square-func)))))
(ros::subscribe "/joy" sensor_msgs::Joy #'joy-callback)
(ros::advertise "/cmd_vel" geometry_msgs::Twist 1)
(cmd_vel 0 0 0)
(do-until-key
 (ros::spin-once)
)
(cmd_vel 0 0 0)
